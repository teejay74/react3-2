{"version":3,"sources":["components/Functions.js","components/Listing.jsx","App.js","reportWebVitals.js","index.js"],"names":["currency","name","value","getCurrency","currentCerrency","filter","o","getPrice","price","Listing","props","items","data","map","item","state","className","href","url","src","MainImage","url_570xN","alt","title","length","substring","currency_code","stock","quantity","listing_id","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"q9hFAAMA,EAAW,CACb,CAAEC,KAAM,MAAOC,MAAO,KACtB,CAAED,KAAM,MAAOC,MAAO,WAGxB,SAASC,EAAYF,GACnB,IAAMG,EAAkBJ,EAASK,QAAO,SAAAC,GAAC,OAAIA,EAAEL,OAASA,KAAM,GAC9D,GAAIG,EACF,OAAOA,EAAgBF,MAIpB,SAASK,EAASN,EAAMO,GAC7B,IAAMR,EAAWG,EAAYF,GAE7B,OAAID,EACI,GAAN,OAAUA,GAAV,OAAqBQ,GAEf,GAAN,OAAUA,EAAV,YAAmBP,GAyBRM,I,OCvCjB,SAASE,EAAQC,GACf,IAAMC,EAAQD,EAAME,KAAKC,KAAI,SAAAC,GAC3B,MAAmB,WAAfA,EAAKC,MACA,KAGP,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,mBAAGC,KAAMH,EAAKI,IAAd,SACE,qBAAKC,IAAKL,EAAKM,UAAUC,UAAWC,IAAKR,EAAKS,YAGlD,sBAAKP,UAAU,eAAf,UACE,mBAAGA,UAAU,aAAb,UDKuBO,ECLmBT,EAAKS,MDMjDA,EAAMC,OAAS,GACX,GAAN,OAAUD,EAAME,UAAU,EAAG,IAA7B,KAEKF,KCRD,mBAAGP,UAAU,aAAb,SAA2BT,EAASO,EAAKY,cAAeZ,EAAKN,SAC7D,oBAAGQ,WDUkBW,ECVMb,EAAKc,SDWlCD,EAAQ,GACH,0BAGLA,EAAQ,GACH,6BAGF,4BCnBD,UAA4Cb,EAAKc,SAAjD,gBATuBd,EAAKe,YDmB7B,IAAsBF,EAPEJ,KCG/B,OAAO,qBAAKP,UAAU,YAAf,SAA4BL,IAGrCF,EAAQqB,aAAe,CACrBlB,KAAM,IAOOH,QCxBAsB,MARf,WACE,OACE,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,CAASJ,KAAMA,OCKNoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d404bf08.chunk.js","sourcesContent":["const currency = [\n    { name: 'USD', value: '$' },\n    { name: 'EUR', value: 'â‚¬' },\n  ]\n  \n  function getCurrency(name) {\n    const currentCerrency = currency.filter(o => o.name === name)[0]\n    if (currentCerrency) {\n      return currentCerrency.value\n    }\n  }\n  \n  export function getPrice(name, price) {\n    const currency = getCurrency(name)\n  \n    if (currency) {\n      return `${currency}${price}`\n    } else {\n      return `${price} ${name}`\n    }\n  }\n  \n  export function getDescription(title) {\n    if (title.length > 50) {\n      return `${title.substring(0, 50)}_`\n    }\n    return title\n  }\n\n  export function getClassName(stock) {\n    if (stock < 10) {\n      return 'item-quantity level-low'\n    }\n  \n    if (stock < 20) {\n      return 'item-quantity level-medium'\n    }\n  \n    return 'item-quantity level-high'\n  }\n  \n\n   \n  export default getPrice","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getPrice, getClassName, getDescription } from './Functions'\n\nfunction Listing(props) {\n  const items = props.data.map(item => {\n    if (item.state !== 'active') {\n      return null\n    }\n    return (\n      <div className=\"item\" key={item.listing_id}>\n        <div className=\"item-image\">\n          <a href={item.url}>\n            <img src={item.MainImage.url_570xN} alt={item.title} />\n          </a>\n        </div>\n        <div className=\"item-details\">\n          <p className=\"item-title\">{getDescription(item.title)}</p>\n          <p className=\"item-price\">{getPrice(item.currency_code, item.price)}</p>\n          <p className={getClassName(item.quantity)}>{item.quantity} left</p>\n        </div>\n      </div>\n    )\n  })\n\n  return <div className=\"item-list\">{items}</div>\n}\n\nListing.defaultProps = {\n  data: [],\n}\n\nListing.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object),\n}\n\nexport default Listing","import './App.css'\nimport data from './etsy.json'\nimport Listing from './components/Listing.jsx'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Listing data={data} />\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}